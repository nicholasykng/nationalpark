{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasykng/nationalpark/client/src/components/ParksList.js\";\nimport React from 'react';\nimport ParkCard from \"../containers/ParkCard\";\nimport { Button } from 'react-bootstrap';\n\nclass ParksList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sorted: true,\n      search: \"\"\n    };\n\n    this.renderParks = () => {\n      const defaultSort = this.state.sorted;\n      this.props.parks.sort(function (a, b) {\n        if (defaultSort) {\n          return b.likes - a.likes;\n        } else {\n          return a.likes - b.likes;\n        }\n      });\n      return this.props.parks.map(park => /*#__PURE__*/React.createElement(ParkCard, {\n        key: park.id,\n        park: park,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 45\n        }\n      }));\n    };\n\n    this.handleSort = () => {\n      this.setState({\n        sorted: !this.state.sorted\n      });\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.props.parks.filter(park => park[name] === this.state.search);\n      console.log(this.props.parks.filter(park => park.name === this.state.search));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"List of Top National Parks From \", this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      className: \"sort-like\",\n      onClick: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"), this.renderParks(), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchterm\",\n      value: this.state.search,\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ParksList;","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/components/ParksList.js"],"names":["React","ParkCard","Button","ParksList","Component","state","sorted","search","renderParks","defaultSort","props","parks","sort","a","b","likes","map","park","id","handleSort","setState","handleOnChange","event","target","value","handleOnSubmit","preventDefault","filter","name","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ParkCard from \"../containers/ParkCard\"\nimport {Button} from 'react-bootstrap'\n\nclass ParksList extends React.Component {\n    state = {\n        sorted: true,\n        search: \"\"\n    }\n\n    renderParks = () => {\n        const defaultSort = this.state.sorted\n        this.props.parks.sort(function(a,b) {\n            if (defaultSort) {\n                return b.likes - a.likes\n            } else {\n                return a.likes - b.likes\n            }\n        })\n        return this.props.parks.map(park => <ParkCard key={park.id} park={park} />)\n    } \n    \n    handleSort = () => {\n        this.setState({\n            sorted: !this.state.sorted\n        })\n    }\n    handleOnChange = event => {\n        this.setState({\n            search: event.target.value\n        })\n    }\n    handleOnSubmit = event => {\n        event.preventDefault()\n        this.props.parks.filter(park => park[name] === this.state.search)\n        console.log(this.props.parks.filter(park => park.name === this.state.search))\n    }\n     \n    render() {\n        return (\n            <div>\n                <h1>List of Top National Parks From {this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"}</h1>\n                <Button variant=\"outline-dark\" className=\"sort-like\" onClick={this.handleSort}>{this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"}</Button>\n                {this.renderParks()}\n                <form onSubmit={this.handleOnSubmit}>\n                    <input type=\"text\" name=\"searchterm\" value={this.state.search} onChange={this.handleOnChange} />\n                    <input type=\"submit\"></input>\n                </form>\n            </div>\n        )\n    }\n}\nexport default ParksList"]},"metadata":{},"sourceType":"module"}