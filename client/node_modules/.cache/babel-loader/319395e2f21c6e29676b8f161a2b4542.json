{"ast":null,"code":"export const fetchParks = () => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING_PARKS\"\n    });\n    return fetch('http://localhost:3000/parks').then(response => response.json()).then(park => dispatch(setParks(park)));\n  };\n};\n\nconst setParks = parks => {\n  return {\n    type: 'FETCH_PARKS',\n    parks\n  };\n};\n\nexport const fetchPark = parkId => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/parks/${parkId}`).then(response => response.json()).then(park => {\n      dispatch(setPark([park]));\n    });\n  };\n};\n\nconst setPark = park => {\n  return {\n    type: \"FETCH_PARK\",\n    park\n  };\n};","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/actions/index.js"],"names":["fetchParks","dispatch","type","fetch","then","response","json","park","setParks","parks","fetchPark","parkId","setPark"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAM;AAC5B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WAAOC,KAAK,CAAC,6BAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDG,IAAI,IAAIN,QAAQ,CAACO,QAAQ,CAACD,IAAD,CAAT,CAFf,CAAP;AAIH,GAND;AAOH,CARM;;AASP,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,SAAO;AACLP,IAAAA,IAAI,EAAE,aADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALH;;AAOA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACnC,SAAOV,QAAQ,IAAI;AACjB,WAAOE,KAAK,CAAE,+BAA8BQ,MAAO,EAAvC,CAAL,CACNP,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDG,IAAI,IAAI;AACZN,MAAAA,QAAQ,CAACW,OAAO,CAAC,CAACL,IAAD,CAAD,CAAR,CAAR;AACD,KAJM,CAAP;AAKD,GAND;AAOD,CARM;;AAUP,MAAMK,OAAO,GAAGL,IAAI,IAAI;AACtB,SAAO;AACLL,IAAAA,IAAI,EAAE,YADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD","sourcesContent":["export const fetchParks = () => {\n    return dispatch => {\n        dispatch({type: \"LOADING_PARKS\"})\n        return fetch('http://localhost:3000/parks')\n        .then(response => response.json())\n        .then(park => dispatch(setParks(park)))\n         \n    }\n}\nconst setParks = parks => {\n    return {\n      type: 'FETCH_PARKS',\n      parks\n    }\n  }\n\nexport const fetchPark = (parkId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/parks/${parkId}`)\n    .then(response => response.json())\n    .then(park => {\n      dispatch(setPark([park]))\n    })\n  }\n}\n\nconst setPark = park => {\n  return {\n    type: \"FETCH_PARK\",\n    park\n  }\n}"]},"metadata":{},"sourceType":"module"}