{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasykng/nationalpark/client/src/containers/Parks.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { fetchParks } from '../actions/fetchParks';\nimport ParksList from \"../components/ParksList\";\nimport ParkShow from \"./ParkShow\";\n\nclass ParksContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchParks();\n  }\n\n  render() {\n    const {\n      match,\n      parks\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.url,\n      render: () => /*#__PURE__*/React.createElement(ParksList, {\n        parks: parks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.url}/:parkId`,\n      render: routerProps => /*#__PURE__*/React.createElement(ParkShow, Object.assign({}, routerProps, {\n        parks: parks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 77\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    parks: state.parks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  debugger;\n  return {\n    fetchParks: () => dispatch(fetchParks())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer);","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/containers/Parks.js"],"names":["React","Component","connect","Route","fetchParks","ParksList","ParkShow","ParksContainer","componentDidMount","console","log","props","render","match","parks","url","routerProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACnCO,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWP,UAAX;AACH;;AACDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAiB,KAAKH,KAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEE,KAAK,CAACE,GAAzB;AAA8B,MAAA,MAAM,EAAE,mBAClC,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,GAAI,UAA1B;AAAqC,MAAA,MAAM,EAAEC,WAAW,iBAAI,oBAAC,QAAD,oBAAcA,WAAd;AAA2B,QAAA,KAAK,EAAEF,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAfkC;;AAiBvC,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACnC;AACA,SAAO;AACHhB,IAAAA,UAAU,EAAE,MAAMgB,QAAQ,CAAChB,UAAU,EAAX;AADvB,GAAP;AAGH,CALD;;AAOA,eAAeF,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,cAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from 'react-router-dom'\nimport {fetchParks} from '../actions/fetchParks'\nimport ParksList from \"../components/ParksList\"\nimport ParkShow from \"./ParkShow\"\n\n\nclass ParksContainer extends Component {\n    componentDidMount() {\n        console.log(this.props)\n        this.props.fetchParks()\n    }\n    render() {\n        const {match, parks} = this.props\n        return (\n            <div>\n                <Route exact path={match.url} render={() => (\n                    <ParksList parks={parks} />\n                )}/>\n                <Route path={`${match.url}/:parkId`} render={routerProps => <ParkShow {...routerProps} parks={parks} />}/>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    debugger\n    return {\n        fetchParks: () => dispatch(fetchParks())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer)"]},"metadata":{},"sourceType":"module"}