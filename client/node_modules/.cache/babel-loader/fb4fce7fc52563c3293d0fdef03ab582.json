{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasykng/nationalpark/client/src/containers/Parks.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { fetchParks } from '../action/fetchParks';\n\nclass ParksContainer extends Component {\n  componentDidMount() {\n    this.props.fetchParks();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.url,\n      render: () => /*#__PURE__*/React.createElement(ParksList, {\n        parks: this.props.parks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nmapStateToProps = state => {\n  return {\n    parks: state.parks\n  };\n};\n\nmapDispatchToProps = dispatch => {\n  return {\n    fetchParks: () => dispatch(fetchParks())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer);","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/containers/Parks.js"],"names":["React","Component","connect","Route","Switch","fetchParks","ParksContainer","componentDidMount","props","render","match","url","parks","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;AAGA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACnCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,UAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEC,KAAK,CAACC,GAAzB;AAA8B,MAAA,MAAM,EAAE,mBAClC,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AAZkC;;AAcvCC,eAAe,GAAGC,KAAK,IAAI;AACvB,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACF;AADV,GAAP;AAGH,CAJD;;AAMAG,kBAAkB,GAAGC,QAAQ,IAAI;AAC7B,SAAO;AACHX,IAAAA,UAAU,EAAE,MAAMW,QAAQ,CAACX,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeH,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,cAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\nimport {fetchParks} from '../action/fetchParks'\n\n\nclass ParksContainer extends Component {\n    componentDidMount() {\n        this.props.fetchParks()\n    }\n    render() {\n        return (\n            <div>\n                <Route exact path={match.url} render={() => (\n                    <ParksList parks={this.props.parks} />\n                )}/>\n            </div>\n        )\n    }\n}\nmapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\n\nmapDispatchToProps = dispatch => {\n    return {\n        fetchParks: () => dispatch(fetchParks())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer)"]},"metadata":{},"sourceType":"module"}