{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasykng/nationalpark/client/src/components/parksearch.js\";\nimport React from 'react';\nimport { FormControl, FormGroup, FormLabel } from 'react-bootstrap';\nimport ParkCard from \"../containers/ParkCard\";\nimport { connect } from 'react-redux';\n\nclass ParkSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filtered: []\n    };\n\n    this.renderParks = () => {\n      return this.props.parks.map(park => /*#__PURE__*/React.createElement(ParkCard, {\n        key: park.id,\n        park: park,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 45\n        }\n      }));\n    };\n\n    this.handleOnChange = event => {\n      let currentPark = [];\n      let newParkList = [];\n\n      if (event.target.value !== \"\") {\n        currentPark = this.props.parks;\n        newParkList = currentPark.filter(park => {\n          const lowercaseparkname = park.name.toLowerCase();\n          let filterpark = event.target.value.toLowerCase();\n          return lowercaseparkname.includes(filterpark);\n        });\n      } else {\n        newParkList = this.props.parks;\n      }\n\n      this.setState({\n        filtered: newParkList\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.parks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"Search For A National Park:\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"searchterm\",\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })), this.renderParks());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    parks: state.parks\n  };\n};\n\nexport default connect(mapStateToProps)(ParkSearch);","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/components/parksearch.js"],"names":["React","FormControl","FormGroup","FormLabel","ParkCard","connect","ParkSearch","Component","state","filtered","renderParks","props","parks","map","park","id","handleOnChange","event","currentPark","newParkList","target","value","filter","lowercaseparkname","name","toLowerCase","filterpark","includes","setState","componentDidMount","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,SAAhC,QAAgD,iBAAhD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD6B;;AAAA,SASrCC,WATqC,GASvB,MAAM;AAChB,aAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBAAI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAAP;AACH,KAXoC;;AAAA,SAYrCE,cAZqC,GAYpBC,KAAK,IAAI;AACtB,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC3BH,QAAAA,WAAW,GAAG,KAAKP,KAAL,CAAWC,KAAzB;AACAO,QAAAA,WAAW,GAAGD,WAAW,CAACI,MAAZ,CAAmBR,IAAI,IAAI;AACrC,gBAAMS,iBAAiB,GAAGT,IAAI,CAACU,IAAL,CAAUC,WAAV,EAA1B;AACA,cAAIC,UAAU,GAAGT,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBI,WAAnB,EAAjB;AACA,iBAAOF,iBAAiB,CAACI,QAAlB,CAA2BD,UAA3B,CAAP;AACH,SAJa,CAAd;AAKH,OAPD,MAOO;AACHP,QAAAA,WAAW,GAAG,KAAKR,KAAL,CAAWC,KAAzB;AACH;;AACD,WAAKgB,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAEU;AADA,OAAd;AAGH,KA5BoC;AAAA;;AAIrCU,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,QAAL,CAAc;AACVnB,MAAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC;AADX,KAAd;AAGH;;AAqBDkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,YAA9B;AAA2C,MAAA,QAAQ,EAAE,KAAKd,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKK,KAAKN,WAAL,EALL,CADJ;AASH;;AAvCoC;;AAyCzC,MAAMqB,eAAe,GAAGvB,KAAK,IAAI;AAC7B,SAAO;AACHI,IAAAA,KAAK,EAAEJ,KAAK,CAACI;AADV,GAAP;AAGH,CAJD;;AAKA,eAAeP,OAAO,CAAC0B,eAAD,CAAP,CAAyBzB,UAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {FormControl, FormGroup, FormLabel} from 'react-bootstrap'\nimport ParkCard from \"../containers/ParkCard\"\nimport {connect} from 'react-redux'\n\nclass ParkSearch extends React.Component {\n    state = {\n        filtered: []\n    }\n    componentDidMount() {\n        this.setState({\n            filtered: this.props.parks\n        })\n    }\n    renderParks = () => {\n        return this.props.parks.map(park => <ParkCard key={park.id} park={park} />)\n    } \n    handleOnChange = event => {\n        let currentPark = []\n        let newParkList = []\n        if (event.target.value !== \"\") {\n            currentPark = this.props.parks\n            newParkList = currentPark.filter(park => {\n                const lowercaseparkname = park.name.toLowerCase()\n                let filterpark = event.target.value.toLowerCase()\n                return lowercaseparkname.includes(filterpark)\n            })\n        } else {\n            newParkList = this.props.parks\n        }\n        this.setState({\n            filtered: newParkList\n        })\n    }\n    render() {\n        return (\n            <div>\n                <FormGroup>\n                    <FormLabel>Search For A National Park:</FormLabel>\n                    <FormControl type=\"text\" name=\"searchterm\" onChange={this.handleOnChange} />\n                </FormGroup>\n                {this.renderParks()}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\nexport default connect(mapStateToProps)(ParkSearch)"]},"metadata":{},"sourceType":"module"}