{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasykng/nationalpark/client/src/components/ParksList.js\";\nimport React from 'react';\nimport ParkCard from \"../containers/ParkCard\";\nimport { Button, FormControl, FormGroup, FormLabel } from 'react-bootstrap';\n\nclass ParksList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sorted: true,\n      filtered: []\n    };\n\n    this.renderParks = () => {\n      const defaultSort = this.state.sorted;\n      this.state.filtered.sort(function (a, b) {\n        if (defaultSort) {\n          return b.likes - a.likes;\n        } else {\n          return a.likes - b.likes;\n        }\n      });\n      return this.state.filtered.map(park => /*#__PURE__*/React.createElement(ParkCard, {\n        key: park.id,\n        park: park,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 48\n        }\n      }));\n    };\n\n    this.handleSort = () => {\n      this.setState({\n        sorted: !this.state.sorted\n      });\n    };\n\n    this.handleOnChange = event => {\n      let currentPark = [];\n      let newParkList = [];\n\n      if (event.target.value !== \"\") {\n        currentPark = this.props.parks;\n        newParkList = currentPark.filter(park => {\n          const lowercaseparkname = park.name.toLowerCase();\n          const filterpark = event.target.value.toLowerCase();\n          return lowercaseparkname.includes(filterpark);\n        });\n      } else {\n        newParkList = this.props.parks;\n      }\n\n      this.setState({\n        filtered: newParkList\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.parks\n    });\n  }\n\n  componentDidUpdate(nextProps) {\n    this.setState({\n      filtered: nextProps.parks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"List of Top National Parks From \", this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-dark\",\n      className: \"sort-like\",\n      onClick: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 182\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 191\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Search For A National Park:\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"searchterm\",\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })), this.renderParks());\n  }\n\n}\n\nexport default ParksList;","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark/client/src/components/ParksList.js"],"names":["React","ParkCard","Button","FormControl","FormGroup","FormLabel","ParksList","Component","state","sorted","filtered","renderParks","defaultSort","sort","a","b","likes","map","park","id","handleSort","setState","handleOnChange","event","currentPark","newParkList","target","value","props","parks","filter","lowercaseparkname","name","toLowerCase","filterpark","includes","componentDidMount","componentDidUpdate","nextProps","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ParkCard from \"../containers/ParkCard\"\nimport {Button, FormControl, FormGroup, FormLabel} from 'react-bootstrap'\n\nclass ParksList extends React.Component {\n    state = {\n        sorted: true,\n        filtered: []\n    }\n    componentDidMount() {\n        this.setState({\n            filtered: this.props.parks\n        })\n    }\n    componentDidUpdate(nextProps){\n       this.setState({\n           filtered: nextProps.parks\n       })\n    }\n    renderParks = () => {\n        const defaultSort = this.state.sorted\n        this.state.filtered.sort(function(a,b) {\n            if (defaultSort) {\n                return b.likes - a.likes\n            } else {\n                return a.likes - b.likes\n            }\n        })\n        return this.state.filtered.map(park => <ParkCard key={park.id} park={park} />)\n    } \n    \n    handleSort = () => {\n        this.setState({\n            sorted: !this.state.sorted\n        })\n    }\n    handleOnChange = event => {\n        let currentPark = []\n        let newParkList = []\n        if (event.target.value !== \"\") {\n            currentPark = this.props.parks\n            newParkList = currentPark.filter(park => {\n                const lowercaseparkname = park.name.toLowerCase()\n                const filterpark = event.target.value.toLowerCase()\n                return lowercaseparkname.includes(filterpark)\n            })\n        } else {\n            newParkList = this.props.parks\n        }\n        this.setState({\n            filtered: newParkList\n        })\n    }\n   \n    render() {\n        return (\n            <div>\n                <h1>List of Top National Parks From {this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"}</h1>\n                <Button variant=\"outline-dark\" className=\"sort-like\" onClick={this.handleSort}>{this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"}</Button><br></br><br></br>\n                <FormGroup>\n                    <FormLabel>Search For A National Park:</FormLabel>\n                    <FormControl type=\"text\" name=\"searchterm\" onChange={this.handleOnChange} />\n                </FormGroup>\n                {this.renderParks()}\n            </div>\n        )\n    }\n}\nexport default ParksList"]},"metadata":{},"sourceType":"module"}